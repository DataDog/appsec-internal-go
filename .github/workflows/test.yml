name: Test
on:
  workflow_dispatch: # manually
  pull_request: # default behaviour opened, reopened, synchronize, edited, ready_for_review
  merge_group:
    branches:
      - main
  push: # on push to the main branch
    branches:
      - main
env:
  DD_APPSEC_WAF_TIMEOUT: 5s
jobs:
  native:
    name: Native ${{ matrix.runs-on }} (Go ${{ matrix.go-version }}, CGO_ENABLED=${{ matrix.cgo_enabled }})
    strategy:
      matrix:
        runs-on: [ macos-15, macos-14, macos-13, ubuntu-22.04, ubuntu-20.04, windows-latest, arm-4core-linux ]
        go-version: [ "1.23", "1.22" ]
        cgo_enabled: [ "0", "1" ] # test it compiles with and without cgo
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Go modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/go/pkg/mod
          key: go-pkg-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: go-pkg-mod-

      - name: go test
        shell: bash
        run: |
          # Install gotestsum
          env GOBIN=$PWD go install gotest.tools/gotestsum@latest
          # Run the tests with gotestsum
          env CGO_ENABLED=${{ matrix.cgo_enabled }} ./gotestsum -- -v ./... || true

  # Same tests but on the official golang container for linux
  golang-linux-container:
    name: Docker golang:${{ matrix.go-version }}-${{ matrix.distribution }} (CGO_ENABLED=${{ matrix.cgo_enabled }})
    runs-on: ubuntu-latest
    container:
      image: golang:${{ matrix.go-version }}-${{ matrix.distribution }}
    strategy:
      matrix:
        go-version: [ "1.23", "1.22" ]
        distribution: [ bookworm, bullseye, alpine ]
        cgo_enabled: [ "0", "1" ] # test it compiles with and without cgo
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      # Install gcc and the libc headers on alpine images
      - if: ${{ matrix.distribution == 'alpine' }}
        run: apk add gcc musl-dev libc6-compat git

      - name: Go modules cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/go/pkg/mod
          key: go-pkg-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: go-pkg-mod-

      - name: go test
        run: |
          # Install gotestsum
          env GOBIN=$PWD go install gotest.tools/gotestsum@latest
          # Run the tests with gotestsum
          env CGO_ENABLED=${{ matrix.cgo_enabled }} ./gotestsum -- -v ./... || true

  everything:
    name: All Tests
    needs:
      - native
      - golang-linux-container
    runs-on: ubuntu-latest
    steps:
      - name: Completed
        run: echo "All tests completed!"
