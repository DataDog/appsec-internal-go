name: Update AppSec Rules
on:
  workflow_dispatch: # manually
  schedule:
    - cron: "0 6 * * 1" # every Monday at 06:00 UTC

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      mutation_happened: ${{ steps.detect.outputs.mutation_happened }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      - name: Generate a GitHub token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.DD_K9_LIBRARY_GO_APP_ID }}
          private-key: ${{ secrets.DD_K9_LIBRARY_GO_APP_PRIVATE_KEY }}
          owner: DataDog
          repositories: appsec-event-rules
          permission-contents: read
      - name: Upgrade AppSec Rules
        run: ./_tools/rules-updater/update.sh latest
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
      - name: Detect Updated Code
        id: detect
        run: |-
          git add .
          git diff --staged --patch --exit-code > ${{ runner.temp }}/repo.patch || echo "mutation_happened=true" >> $GITHUB_OUTPUT
      - name: Upload Patch
        if: steps.detect.outputs.mutation_happened
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: repo.patch
          path: ${{ runner.temp }}/repo.patch

  create-pr:
    needs: update
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: needs.update.outputs.mutation_happened
    steps:
      - name: Generate a GitHub token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.DD_K9_LIBRARY_GO_APP_ID }}
          private-key: ${{ secrets.DD_K9_LIBRARY_GO_APP_PRIVATE_KEY }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.generate-token.outputs.token }}
          persist-credentials: true
      - name: Download Patch
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: repo.patch
          path: ${{ runner.temp }}
      - name: Apply Patch
        id: apply
        run: |-
          git apply ${{ runner.temp }}/repo.patch
          echo "version=$(jq -r '.metadata.rules_version' < ./appsec/rules.json)" >> $GITHUB_OUTPUT
      - name: Push Changes
        run: |-
          git add .
          git commit -m "Update embedded AppSec Rules"
          git push --force-with-lease origin HEAD:automation/update-appsec-rules
      - name: Create Pull Request
        run: |-
          gh pr create --title "Update embedded AppSec Rules to ${{ steps.apply.outputs.version }}" \
            --body "Automatically created by [GitHub Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})." \
            --base "main" --head "automation/update-appsec-rules" \
            --reviewer "@DataDog/asm-go"
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
